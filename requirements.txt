# Enhancing Job Screening with AI and Data Intelligence - Full Documentation

## 1. requirements.txt
# Requirements for Enhancing Job Screening with AI and Data Intelligence

# Python Package Requirements
pandas>=1.5.0              # For loading and manipulating job_description.csv
pdfplumber>=0.10.0         # For parsing PDF CVs
scikit-learn>=1.2.0        # For TF-IDF vectorization and cosine similarity matching
streamlit>=1.29.0          # For the interactive UI in app.py
sqlite3                    # Included in Python standard library, used for recruitment.db


# Python Version
# Ensure Python 3.7+ is installed (recommended: Python 3.9+ for Streamlit compatibility).
# Check version: python --version

# Manual Path Adjustments
# Update the following paths in the .py files based on your local setup:
# 1. Data Directory:
#    - In job_screening.py, precompute_summaries.py, and app.py:
#      data_dir = "../data"  -> Change to "C:\Users\hp\Desktop\JobScreening\data"
#    - Ensure job_description.csv and CVs1/ folder are in this directory.
# 2. Output Directory:
#    - In job_screening.py:
#      OUTPUT_DIR = os.path.join(BASE_DIR, "../output")  -> Change to "C:\Users\hp\Desktop\JobScreening\output"
#    - Verify output/ exists or create it manually.
# 3. JD Summaries File:
#    - In app.py:
#      jd_summaries_file = os.path.join(data_dir, "jd_summaries.json")  -> Ensure it points to "C:\Users\hp\Desktop\JobScreening\data\jd_summaries.json"
#    - Generated by precompute_summaries.py.
# 4. CV Directory:
#    - In job_screening.py:
#      CV_DIR = os.path.join(DATA_DIR, "CVs1")  -> Change to "C:\Users\hp\Desktop\JobScreening\data\CVs1"
#    - Match your CVs1/ location.
# How to Adjust:
# 1. Open each .py file in a text editor (e.g., VS Code).
# 2. Search for the above variables and replace paths with your absolute or relative paths.
# 3. Save changes.

# Model Installation Guide (Ollama with Gemma:2b)
# Required for JD summarization in precompute_summaries.py (optional if using pre-computed jd_summaries.json).
# 1. Install Ollama:
#    - Download and install from https://ollama.com/.
#    - On Windows:
#      - Download the installer, run it, and follow prompts.
#    - Verify: ollama --version (e.g., "ollama version 0.1.XX").
# 2. Pull Gemma:2b Model:
#    - Run: ollama pull gemma:2b
#    - Downloads ~4GB, takes ~10-20 minutes.
#    - Verify: ollama list (should show "gemma:2b").
# 3. Run Ollama Server (Optional):
#    - For real-time summarization: ollama serve
#    - Keep this terminal open if not using pre-computed jd_summaries.json.
# 4. Troubleshooting:
#    - If ollama.chat fails, ensure the server is running or use pre-computed jd_summaries.json.
#    - Check GPU support (optional): Install CUDA if available.